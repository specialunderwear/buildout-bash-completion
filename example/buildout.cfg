##############################################################################
# Buildout is a Python-based build system for creating, assembling and
# deploying applications from multiple parts, some of which may be
# non-Python-based. It lets you create a buildout configuration and reproduce
# the same software later.
# http://www.buildout.org
# http://www.buildout.org/docs/tutorial.html#buildout-overview
##############################################################################

# main buildout section
[buildout]
# unzip all eggs
unzip = true

# buildout extensions
# mr.developer is a buildout extension for checking out source code from
# all kind repositories, and to make development much easier
# see also http://pypi.python.org/pypi/mr.developer
extensions =
    mr.developer

# list with the active parts, these will be built when running:
# ./bin/buildout
# the parts are built in the order listed.
parts =
    all
    supervisor
    test
    omelette

# the source eggs, which end up in the 'src' folder are listed in the
# [sources] section.
sources = sources

# these eggs are installed with this buildout for which there are no
# dependencies for, but are needed somehow
eggs =

# define which eggs handled by mr.developer are automatically checked out
auto-checkout = *

# everytime when you run buildout it should automatically checkout all 
# source eggs handled by mr.developer
always-checkout = true

# a list of all the source eggs and their names in this buildout.
# These will be installed in the 'src' directory.
[sources]
voxin = git git://github.com/specialunderwear/voxin.git
tornado = git git://github.com/facebook/tornado.git

##############################################################################
# Parts
##############################################################################

[all]
recipe = zc.recipe.egg
eggs = 
    voxin
    tompoes

# a folder containing all used packages (eggs), but collapsed, so namespaces
# are merged into a single folder. This folder is 'omelette'.
[omelette]
recipe = collective.recipe.omelette
location = ${buildout:directory}/omelette
eggs =
    ${all:eggs}
    ${buildout:eggs}

# The supervisor will start all services for you and keep them running.
# This way you can start the whole stack in one go.
# http://supervisord.org
[supervisor]
recipe = fourdigits.recipe.supervisor
password = root
programs =
    10 voxin7777 ${buildout:directory}/bin/voxin [ --port 7777 ] true
    10 voxin8888 ${buildout:directory}/bin/voxin [ --port 8888 ] true

# This installs nose, so you can run unit tests on all stuff in 'src' easily.
[test]
recipe = pbp.recipe.noserunner
eggs =
    ${all:eggs}
    mox
    nose-cov
